import{f as v,j as i,h as k,N as _,o as n,c as l,F as p,x as h,q as b,b as e,t as o,p as y,e as S,_ as w}from"./index-dq3P82ji.js";const d=u=>(y("data-v-6b3b6fc2"),u=u(),S(),u),I=d(()=>e("h2",null,"Sensor Status",-1)),x={key:0},N=d(()=>e("tr",null,[e("th",null,"Sensor ID"),e("th",null,"User ID"),e("th",null,"Model"),e("th",null,"Floor"),e("th",null,"Last Timestamp"),e("th",null,"# of Recordings")],-1)),T={key:1},q={key:2},B={key:3},C=d(()=>e("h2",null,"Recordings",-1)),L=["href"],R={key:4},V=v({__name:"StatusView",setup(u){const a=i(null),r=i(null);k(async()=>{a.value=await _("/api/sensor_status")||[]});async function f(s){var c;if(s.currentTarget instanceof HTMLTableRowElement){const t=(c=a.value)==null?void 0:c[s.currentTarget.rowIndex-1];console.debug("Selected sensor:",t),t&&t.id&&(r.value=await m(t.id))}}async function m(s){return await _(`/api/list_recordings/${s}`)||null}function g(s){return`https://capstone-backend-f6qu.onrender.com/recording/${s}`}return(s,c)=>(n(),l("main",null,[I,a.value!==null&&a.value.length?(n(),l("table",x,[N,(n(!0),l(p,null,h(a.value,t=>(n(),l("tr",{onClick:f},[e("td",null,[e("a",null,o(t.id),1)]),e("td",null,o(t.userid),1),e("td",null,o(t.model),1),e("td",null,o(t.floor),1),e("td",null,o(t.last_timestamp),1),e("td",null,o(t.num_recordings),1)]))),256))])):a.value!==null?(n(),l("p",T,"No sensors loaded. Check console")):(n(),l("p",q,"Loading...")),r.value!==null&&r.value.length?(n(),l("div",B,[C,(n(!0),l(p,null,h(r.value.reverse(),t=>(n(),l("div",null,[e("a",{target:"_blank",href:g(t)},o(t),9,L)]))),256))])):r.value!==null?(n(),l("p",R,"No available recordings")):b("",!0)]))}}),F=w(V,[["__scopeId","data-v-6b3b6fc2"]]);export{F as default};
